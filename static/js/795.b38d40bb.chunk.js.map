{"version":3,"file":"static/js/795.b38d40bb.chunk.js","mappings":"4LACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,Y,SCF9C,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCwEnI,EAlEkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAAoCE,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACE,UAAC,EAAAC,SAAD,YACE,SAAC,KAAD,CACEC,KAAMH,EACNI,QAAS,SAACC,GACR,MAAO,2EAGX,SAAC,EAAD,WACE,kBACEC,QAlBmB,WACzBL,GAAc,IAkBRR,UAAWC,EACXa,SAlCR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAGZ,KAAzBF,EAAcI,QAAwC,KAAvBD,EAAYC,SAE/CtB,EAAMuB,WAAW,CAAEC,OAAQN,EAAeO,KAAMJ,IAChDjB,EAAee,QAAQC,MAAQ,GAC/Bd,EAAaa,QAAQC,MAAQ,KAoBzB,UAKGpB,EAAM0B,YACL,gBAAKzB,UAAWC,EAAhB,UACE,SAACyB,EAAA,EAAD,OAIJ,iBAAK1B,UAAWC,EAAhB,WACE,kBAAO0B,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK3B,QAEtC,iBAAKH,UAAWC,EAAhB,WACE,kBAAO0B,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKzB,QAEpC,gBAAKL,UAAWC,EAAhB,UACE,mBAAQ+B,QAjCY,WAC5BxB,GAAc,IAgCkCR,UAAU,MAAlD,kC,kBCrCZ,EAnBiB,WACf,OAAgCiC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAMZ,OACE,SAAC,EAAD,CAAWZ,UAAsB,YAAXW,EAAsBd,WALtB,SAACmB,GACvBN,EAAYM","sources":["webpack://expenses-app/./src/components/ui/Card.module.css?49cd","components/ui/Card.js","webpack://expenses-app/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__fFIQa\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__7Xdtx\",\"loading\":\"QuoteForm_loading__OVEoZ\",\"control\":\"QuoteForm_control__aS2U5\",\"actions\":\"QuoteForm_actions__wGtit\",\"add-quote-button\":\"QuoteForm_add-quote-button__f9NEf\"};","import { Fragment } from \"react\";\nimport { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    if (enteredAuthor.trim() === \"\" || enteredText.trim() === \"\") return;\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    authorInputRef.current.value = \"\";\n    textInputRef.current.value = \"\";\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) => {\n          return \"Are you sure you want to leave ? All your entered data will be lost!\";\n        }}\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}